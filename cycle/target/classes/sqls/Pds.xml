<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="Pds">

<select id="getPdsList" resultType="cycle.model.PdsDto">
	SELECT SEQ, ID, REF, STEP, DEPTH, TITLE, CONTENT, FILENAME,
		READCOUNT, DOWNCOUNT, REGDATE
	FROM PDS
	ORDER BY REF DESC, STEP ASC
</select>

<select id="getPdsPagingList" parameterType="cycle.model.PdsParam"
		resultType="cycle.model.PdsDto">
	SELECT SEQ, ID, REF, STEP, DEPTH, TITLE, CONTENT, FILENAME,
	READCOUNT, DOWNCOUNT, REGDATE
	FROM (SELECT ROW_NUMBER() OVER(ORDER BY REF DESC, STEP ASC) AS RNUM,
		  SEQ, ID, REF, STEP, DEPTH, TITLE, CONTENT, FILENAME,
		  READCOUNT, DOWNCOUNT, REGDATE
		  FROM PDS
		  WHERE 1=1
		  <if test="s_category != '' and s_category != null
		  		and s_keyword != '' and s_keyword != null">
		  		<if test="s_category == 'title'">
		  			AND TITLE LIKE '%'||#{s_keyword}||'%'
		  		</if>
		  		<if test="s_category == 'id'">
		  			AND ID LIKE '%'||#{s_keyword}||'%'
		  		</if>
		  	</if>) A
	WHERE RNUM BETWEEN ${start} AND ${end}
</select>

<select id="getPdsCount" parameterType="cycle.model.PdsParam"
	resultType="java.lang.Integer">
	SELECT NVL(COUNT(*), 0) AS CNT
	FROM PDS
	WHERE 1=1
	<if test="s_category != '' and s_category != null
			and s_keyword != '' and s_keyword != null">
		<if test="s_category == 'title'">
			AND TITLE LIKE '%'||#{s_keyword}||'%'
		</if>	
		<if test="s_category == 'id'">
			AND ID LIKE '%'||#{s_keyword}||'%'
		</if>
	</if>
</select>


<insert id="uploadPds" parameterType="cycle.model.PdsDto">
	INSERT INTO PDS(SEQ, ID, REF, STEP, DEPTH, TITLE, CONTENT, FILENAME,
					READCOUNT, DOWNCOUNT, REGDATE)
	VALUES(SEQ_PDS.NEXTVAL, #{id},
	(SELECT NVL(MAX(REF),0)+1 FROM PDS),0,0, 
	 #{title}, #{content}, #{filename},
					0, 0, SYSDATE)
</insert>


<insert id="replyPdsInsert"
		parameterType="cycle.model.PdsDto"
		useGeneratedKeys="true"   
  keyProperty="seq">
		INSERT INTO PDS
		(SEQ, ID, REF, STEP, DEPTH, TITLE, CONTENT, FILENAME,
		READCOUNT, DOWNCOUNT, REGDATE)
		VALUES(SEQ_PDS.NEXTVAL, #{id},
		(SELECT REF FROM PDS WHERE SEQ=#{ref}),
		(SELECT STEP FROM PDS WHERE SEQ=#{ref})+1,
		(SELECT DEPTH FROM PDS WHERE SEQ=#{ref})+1,
		#{title}, #{content}, #{filename}, 0, 0, SYSDATE)
</insert>

<update id="replyPdsUpdate"
	parameterType="cycle.model.PdsDto">
	UPDATE  PDS
	SET STEP=STEP+1
	WHERE REF=(SELECT REF FROM PDS WHERE SEQ=#{seq})
		AND STEP>(SELECT STEP FROM PDS WHERE SEQ=#{seq})		
</update>


<select id="getPds" parameterType="java.lang.Integer"
	resultType="cycle.model.PdsDto">
	SELECT SEQ, ID, REF, STEP, DEPTH, TITLE, CONTENT, FILENAME, READCOUNT, 
		DOWNCOUNT, REGDATE
	FROM PDS
	WHERE SEQ=#{seq}
</select>

<update id="readcount" parameterType="java.lang.Integer">
	UPDATE PDS
	SET READCOUNT=READCOUNT+1
	WHERE SEQ=#{seq}
</update>

<update id="downcount" parameterType="java.lang.Integer">
	UPDATE PDS
	SET DOWNCOUNT=DOWNCOUNT+1
	WHERE SEQ=#{seq}
</update>


<delete id="deletePds" parameterType="cycle.model.PdsDto">
	DELETE FROM PDS
	WHERE SEQ=#{seq}
</delete>


<update id="updatePds" parameterType="cycle.model.PdsDto">
	UPDATE PDS
	SET TITLE=#{title}, CONTENT=#{content}, 
		FILENAME=#{filename}, REGDATE=SYSDATE
	WHERE SEQ=#{seq}
</update>


</mapper>  










